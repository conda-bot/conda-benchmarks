{
    "peakmem_create_numpy_mkl": {
        "code": "@pytest.mark.benchmark\ndef test_create_numpy_mkl():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'numpy=1.15.2'])",
        "name": "peakmem_create_numpy_mkl",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "13b1ae4eebd0e59e3bc6d26a78190f32e42cca5d2eeda8ed9105b99db5a72a87"
    },
    "peakmem_create_numpy_openblas": {
        "code": "@pytest.mark.benchmark\ndef test_create_numpy_openblas():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'numpy=1.15.2', 'nomkl'])",
        "name": "peakmem_create_numpy_openblas",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "656ef7ca441609508c4f968b88a3b2cbac574fb6ee5344c6c3d64c60b9025bf0"
    },
    "peakmem_create_python": {
        "code": "@pytest.mark.benchmark\ndef test_create_python():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(), '-c', main, 'python=3.6'])",
        "name": "peakmem_create_python",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "30097b0542e813f4782ac59e59078f9e2e11848dba350dc43d69717d09179546"
    },
    "peakmem_create_python_boost": {
        "code": "@pytest.mark.benchmark\ndef test_create_python_boost():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'libboost'])",
        "name": "peakmem_create_python_boost",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "3e20c0ae39821dd285a2eeda2a4ec5a15271cd4b6b4a08a8305a85a344bdbdd1"
    },
    "peakmem_solve_anaconda_44": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_44():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, '-c', free, 'anaconda=4.4.0'])",
        "name": "peakmem_solve_anaconda_44",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "2b896a225dc51e888e32929341a6912c4444d61ef62d00e3aa5b89ab1195df47"
    },
    "peakmem_solve_anaconda_44_free_only": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_44_free_only():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', free, 'anaconda=4.4.0'])",
        "name": "peakmem_solve_anaconda_44_free_only",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "0645dbce91e79f68131f483b780e43ce4d71126de7973a05eecf07ee525c357e"
    },
    "peakmem_solve_anaconda_53": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_53():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, 'anaconda=5.3.0'])",
        "name": "peakmem_solve_anaconda_53",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "8ab30d5c38da24ce86a6e9ec5b7245ddb2a7b52f46d4ff0296f5806d34b926e9"
    },
    "peakmem_solve_r_essentials_r_base_conda_forge": {
        "code": "@pytest.mark.benchmark\ndef test_solve_r_essentials_r_base_conda_forge():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', conda_forge, '-c', main, '-c', r,\n                                    'r-essentials', 'r-base'])",
        "name": "peakmem_solve_r_essentials_r_base_conda_forge",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "0ca9152e47b90037aaf9399af7b70cf0be75cf51bd0179e34ce9c92e4f477303"
    },
    "peakmem_solve_r_essentials_r_base_defaults": {
        "code": "@pytest.mark.benchmark\ndef test_solve_r_essentials_r_base_defaults():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, '-c', r, 'r-essentials', 'r-base'])",
        "name": "peakmem_solve_r_essentials_r_base_defaults",
        "param_names": [],
        "params": [],
        "timeout": 60.0,
        "type": "peakmemory",
        "unit": "bytes",
        "version": "594e476712d4c7ac5e8a736ca36a66d530184ca2c4c2ae4242bd716cc340ce07"
    },
    "time_create_numpy_mkl": {
        "code": "@pytest.mark.benchmark\ndef test_create_numpy_mkl():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'numpy=1.15.2'])",
        "min_run_count": 2,
        "name": "time_create_numpy_mkl",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "13b1ae4eebd0e59e3bc6d26a78190f32e42cca5d2eeda8ed9105b99db5a72a87",
        "warmup_time": -1
    },
    "time_create_numpy_openblas": {
        "code": "@pytest.mark.benchmark\ndef test_create_numpy_openblas():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'numpy=1.15.2', 'nomkl'])",
        "min_run_count": 2,
        "name": "time_create_numpy_openblas",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "656ef7ca441609508c4f968b88a3b2cbac574fb6ee5344c6c3d64c60b9025bf0",
        "warmup_time": -1
    },
    "time_create_python": {
        "code": "@pytest.mark.benchmark\ndef test_create_python():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(), '-c', main, 'python=3.6'])",
        "min_run_count": 2,
        "name": "time_create_python",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "30097b0542e813f4782ac59e59078f9e2e11848dba350dc43d69717d09179546",
        "warmup_time": -1
    },
    "time_create_python_boost": {
        "code": "@pytest.mark.benchmark\ndef test_create_python_boost():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(CREATE_ARGS + ['-y', '-n', random_env_name(),  '-c', main, 'python=3.6', 'libboost'])",
        "min_run_count": 2,
        "name": "time_create_python_boost",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3e20c0ae39821dd285a2eeda2a4ec5a15271cd4b6b4a08a8305a85a344bdbdd1",
        "warmup_time": -1
    },
    "time_solve_anaconda_44": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_44():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, '-c', free, 'anaconda=4.4.0'])",
        "min_run_count": 2,
        "name": "time_solve_anaconda_44",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2b896a225dc51e888e32929341a6912c4444d61ef62d00e3aa5b89ab1195df47",
        "warmup_time": -1
    },
    "time_solve_anaconda_44_free_only": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_44_free_only():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', free, 'anaconda=4.4.0'])",
        "min_run_count": 2,
        "name": "time_solve_anaconda_44_free_only",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0645dbce91e79f68131f483b780e43ce4d71126de7973a05eecf07ee525c357e",
        "warmup_time": -1
    },
    "time_solve_anaconda_53": {
        "code": "@pytest.mark.benchmark\ndef test_solve_anaconda_53():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, 'anaconda=5.3.0'])",
        "min_run_count": 2,
        "name": "time_solve_anaconda_53",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "8ab30d5c38da24ce86a6e9ec5b7245ddb2a7b52f46d4ff0296f5806d34b926e9",
        "warmup_time": -1
    },
    "time_solve_r_essentials_r_base_conda_forge": {
        "code": "@pytest.mark.benchmark\ndef test_solve_r_essentials_r_base_conda_forge():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', conda_forge, '-c', main, '-c', r,\n                                    'r-essentials', 'r-base'])",
        "min_run_count": 2,
        "name": "time_solve_r_essentials_r_base_conda_forge",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0ca9152e47b90037aaf9399af7b70cf0be75cf51bd0179e34ce9c92e4f477303",
        "warmup_time": -1
    },
    "time_solve_r_essentials_r_base_defaults": {
        "code": "@pytest.mark.benchmark\ndef test_solve_r_essentials_r_base_defaults():\n    execute_conda_cmd(CLEAN_INDEX_ARGS)\n    execute_conda_cmd(SOLVE_ARGS + ['-c', main, '-c', r, 'r-essentials', 'r-base'])",
        "min_run_count": 2,
        "name": "time_solve_r_essentials_r_base_defaults",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "594e476712d4c7ac5e8a736ca36a66d530184ca2c4c2ae4242bd716cc340ce07",
        "warmup_time": -1
    },
    "version": 2
}